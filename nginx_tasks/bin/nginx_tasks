#!/usr/bin/env ruby
require 'gli'
begin # XXX: Remove this begin/rescue before distributing your app
require 'nginx_tasks'
rescue LoadError
  STDERR.puts "In development, you need to use `bundle exec bin/nginx_tasks` to run your app"
  STDERR.puts "At install-time, RubyGems will make sure lib, etc. are in the load path"
  STDERR.puts "Feel free to remove this message from bin/nginx_tasks now"
  exit 64
end

include GLI::App

program_desc 'Helper tasks to deal with Nginx programmatically'

version NginxTasks::VERSION

desc 'Add a server to an existing application'
arg_name '<application_name> <server_ip> <server_port>'
command :add_server do |c|
  c.action do |global_options, options, args|
    raise "Incorrect number of arguments expected 3 found #{args.size}" unless args.size == 3
    application_name, server_ip, server_port = args
    Nginx::Config.add_server(application_name, server_ip, server_port)
  end
end

desc 'Describe remove_server here'
arg_name '<applicatio_name> <server_ip> <server_port>'
command :remove_server do |c|
  c.action do |global_options, options, args|
    raise "Incorrect number of arguments expected 3 found #{args.size}" unless args.size == 3
    application_name, server_ip, server_port = args
    Nginx::Config.remove_server(application_name, server_ip, server_port)
  end
end

pre do |global,command,options,args|
  # Pre logic here
  # Return true to proceed; false to abort and not call the
  # chosen command
  # Use skips_pre before a command to skip this block
  # on that command only
  true
end

post do |global,command,options,args|
  # Post logic here
  # Use skips_post before a command to skip this
  # block on that command only
end

on_error do |exception|
  # Error logic here
  # return false to skip default error handling
  true
end

exit run(ARGV)
